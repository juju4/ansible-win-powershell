---

## PowerShell5, WMF5. regedit or GPO. https://www.fireeye.com/blog/threat-research/2016/02/greater_visibilityt.html
##      https://blogs.msdn.microsoft.com/powershell/2015/06/09/powershell-the-blue-team/
##      https://www.blackhat.com/docs/us-14/materials/us-14-Kazanciyan-Investigating-Powershell-Attacks-WP.pdf
##      http://fr.slideshare.net/Hackerhurricane/ask-aalware-archaeologist/25
## 	http://www.asd.gov.au/publications/protect/securing-powershell.htm
## 	https://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/
## 	https://blogs.msdn.microsoft.com/daviddasneves/2017/05/25/powershell-security-at-enterprise-customers/
##	https://www.trendmicro.com/vinfo/us/security/news/security-technology/security-101-the-rise-of-fileless-threats-that-abuse-powershell
## Forward EID 4104 to SIEM at least. https://msdn.microsoft.com/en-us/library/cc748890.aspx
## https://media.defcon.org/DEF%20CON%2025/DEF%20CON%2025%20presentations/DEFCON-25-Daniel-Bohannon-and-Lee-Holmes-Revoke-Obfuscation.pdf

- name: enable module logging - PowerShell5
  win_regedit:
    key: HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\ModuleLogging
    value: EnableModuleLogging
    data: 1
    datatype: dword

### FIXME! why need to ignore errors???
- name: enable module logging - PowerShell5 (2)
  win_regedit:
#    key: 'HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\ModuleLogging \ModuleNames'
    key: 'HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\ModuleLogging\ModuleNames'
    value: "*"
    data: "*"
  ignore_errors: true

## Warning! those options are very verbose!
- name: enable script block logging - PowerShell5
  win_regedit:
    key: "{{ item }}\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging"
    value: EnableScriptBlockLogging
    data: 1
    datatype: dword
  with_items:
    - "HKLM:\\SOFTWARE\\Wow6432Node"
    - "HKLM:\\SOFTWARE"

- name: enable transcription - PowerShell5
  win_regedit:
    key: "{{ item }}\\Policies\\Microsoft\\Windows\\PowerShell\\Transcription"
    value: EnableTranscripting
    data: 1
    datatype: dword
  with_items:
    - "HKLM:\\SOFTWARE\\Wow6432Node"
    - "HKLM:\\SOFTWARE"

- name: enable transcription - PowerShell5 (2)
  win_regedit:
    key: "{{ item }}\\Policies\\Microsoft\\Windows\\PowerShell\\Transcription"
    value: EnableInvocationHeader
    data: 1
    datatype: dword
  with_items:
    - "HKLM:\\SOFTWARE\\Wow6432Node"
    - "HKLM:\\SOFTWARE"

- name: Create directory structure
  win_file:
    path: "{{ win_powershell_transcription_dir }}"
    state: directory

- name: setup permissions script for Transcript directory
  win_template:
    src: PowershellTranscripts-dir.ps1.j2
    dest: "{{ win_temp_dir }}\\PowershellTranscripts-dir.ps1"

- name: Validate permissions for Transcript directory
  win_shell: "\"{{ win_temp_dir }}\\PowershellTranscripts-dir.ps1\""

- name: enable transcription - PowerShell5 (3)
  win_regedit:
    key: "{{ item }}\\Policies\\Microsoft\\Windows\\PowerShell\\Transcription"
    value: OutputDirectory
## default is %USERPROFILE%\Documents, can be UNC path
## Dont forget to set appropriate permission, script attached
#    data: ""
    data: "{{ win_powershell_transcription_dir }}"
## FIXME! Not recorded
#    data: "%USERPROFILE%\\AppData\\Roaming\\PowershellTranscripts"
#    datatype: string
  with_items:
    - "HKLM:\\SOFTWARE\\Wow6432Node"
    - "HKLM:\\SOFTWARE"

# https://blogs.technet.microsoft.com/kfalde/2017/05/13/securing-your-powershell-operational-logs/
# FIXME!
- name: Remove powershell logs access for BUILTIN Users
  win_acl:
    path: "HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-PowerShell/Operational"
    user: "{{ item }}"
#    rights: ChangePermissions,Delete,FullControl,ReadKey,SetValue,TakeOwnership,WriteKey
    rights: ReadKey
    type: allow
    state: absent
#    type: deny
#    state: present
    inherit: 'None'
    propagation: 'None'
  with_items:
    - 'BUILTIN\Users'
  ignore_errors: true
