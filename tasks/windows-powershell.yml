---

- name: Enable module logging - PowerShell5
  ansible.windows.win_regedit:
    key: HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\ModuleLogging
    value: EnableModuleLogging
    data: 1
    datatype: dword

### FIXME! why need to ignore errors???
- name: Enable module logging - PowerShell5 (2)
  ansible.windows.win_regedit:
    key: 'HKLM:\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\ModuleLogging\ModuleNames'
    value: "*"
    data: "*"
  failed_when: false

## Warning! those options are very verbose!
- name: Enable script block logging - PowerShell5
  ansible.windows.win_regedit:
    key: "{{ item }}\\Policies\\Microsoft\\Windows\\PowerShell\\ScriptBlockLogging"
    value: EnableScriptBlockLogging
    data: 1
    datatype: dword
  with_items:
    - "HKLM:\\SOFTWARE\\Wow6432Node"
    - "HKLM:\\SOFTWARE"

- name: Enable transcription - PowerShell5
  ansible.windows.win_regedit:
    key: "{{ item }}\\Policies\\Microsoft\\Windows\\PowerShell\\Transcription"
    value: EnableTranscripting
    data: 1
    datatype: dword
  with_items:
    - "HKLM:\\SOFTWARE\\Wow6432Node"
    - "HKLM:\\SOFTWARE"

- name: Enable transcription - PowerShell5 (2)
  ansible.windows.win_regedit:
    key: "{{ item }}\\Policies\\Microsoft\\Windows\\PowerShell\\Transcription"
    value: EnableInvocationHeader
    data: 1
    datatype: dword
  with_items:
    - "HKLM:\\SOFTWARE\\Wow6432Node"
    - "HKLM:\\SOFTWARE"

- name: Create directory structure
  ansible.windows.win_file:
    path: "{{ win_powershell_transcription_dir }}"
    state: directory

- name: Setup permissions script for Transcript directory
  ansible.windows.win_template:
    src: PowershellTranscripts-dir.ps1.j2
    dest: "{{ win_temp_dir }}\\PowershellTranscripts-dir.ps1"

- name: Validate permissions for Transcript directory
  ansible.windows.win_shell: "\"{{ win_temp_dir }}\\PowershellTranscripts-dir.ps1\""

- name: Enable transcription - PowerShell5 (3)
  ansible.windows.win_regedit:
    key: "{{ item }}\\Policies\\Microsoft\\Windows\\PowerShell\\Transcription"
    value: OutputDirectory
    ## default is %USERPROFILE%\Documents, can be UNC path
    ## Dont forget to set appropriate permission, script attached
    # data: ""
    data: "{{ win_powershell_transcription_dir }}"
    ## FIXME! Not recorded
    # data: "%USERPROFILE%\\AppData\\Roaming\\PowershellTranscripts"
    # datatype: string
  with_items:
    - "HKLM:\\SOFTWARE\\Wow6432Node"
    - "HKLM:\\SOFTWARE"

# https://blogs.technet.microsoft.com/kfalde/2017/05/13/securing-your-powershell-operational-logs/
# http://community.idera.com/powershell/powertips/b/tips/posts/hardening-powershell-script-block-logging-log
# FIXME!
- name: Remove powershell logs access for BUILTIN Users
  ansible.windows.win_acl:
    path: "HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WINEVT\\Channels\\Microsoft-Windows-PowerShell/Operational"
    user: "{{ item }}"
    # rights: ChangePermissions,Delete,FullControl,ReadKey,SetValue,TakeOwnership,WriteKey
    rights: ReadKey
    type: allow
    state: absent
    # type: deny
    # state: present
    inherit: 'None'
    propagation: 'None'
  with_items:
    - 'BUILTIN\Users'
  failed_when: false

- name: Import windows-powershell-constrained
  ansible.builtin.import_tasks: windows-powershell-constrained.yml
  when: win_powershell_constrained|bool

- name: Import windows-powershell-v6
  ansible.builtin.import_tasks: windows-powershell-v6.yml
  when: win_powershell_v6|bool
